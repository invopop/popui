package popui

import (
	"github.com/invopop/popui/go/classes"
	"github.com/invopop/popui/go/props"
)

// Button provides a button element.
// Supports small size and different variants: "primary", "secondary", "danger" and "transparent"
templ Button(opts ...props.Button) {
	{{ p := props.First(opts) }}
	<button
		if p.ShowSpinnerOnClick {
			onclick="showButtonSpinner(this);"
		}
		class={
			templ.KV(classes.ButtonBase, p.Class == ""),
			templ.KV(p.Class, p.Class != ""),
			templ.KV(classes.ButtonDanger, p.Variant == "danger"),
			templ.KV(classes.ButtonPrimary, p.Variant == "primary"),
			templ.KV(classes.ButtonSecondary, p.Variant == "secondary"),
			templ.KV(classes.ButtonTransparent, p.Variant == "transparent"),
			templ.KV(classes.ButtonSmall, p.Small),
		}
		if p.ID != "" {
			id={ p.ID }
		}
		if p.Disabled {
			disabled
		}
		if p.Type != "" {
			type={ p.Type }
		}
		if p.Autofocus {
			autofocus
		}
		if p.Name != "" {
			name={ p.Name }
		}
		if p.Value != "" {
			value={ p.Value }
		}
		if p.Form != "" {
			form={ p.Form }
		}
		{ p.Attrs... }
	>
		{ children... }
		<div class={ classes.ButtonSpinner }>
			@ButtonSpinner()
		</div>
	</button>
}

// AnchorButton provides an anchor element styled as a button.
// Supports small size and different variants: "primary", "secondary", "danger" and "transparent"
templ AnchorButton(p props.AnchorButton) {
	<a
		class={
			templ.KV(classes.ButtonBase, p.Class == ""),
			templ.KV(p.Class, p.Class != ""),
			templ.KV(classes.ButtonDanger, p.Variant == "danger"),
			templ.KV(classes.ButtonPrimary, p.Variant == "primary"),
			templ.KV(classes.ButtonSecondary, p.Variant == "secondary"),
			templ.KV(classes.ButtonTransparent, p.Variant == "transparent"),
			templ.KV(classes.ButtonSmall, p.Small),
		}
		if p.ID != "" {
			id={ p.ID }
		}
		if p.Href != "" {
			href={ p.Href }
		}
		if p.Target != "" {
			target={ p.Target }
		}
		if p.Rel != "" {
			rel={ p.Rel }
		}
		if p.Download {
			download
		}
		if p.Type != "" {
			type={ p.Type }
		}
		{ p.Attrs... }
	>
		{ children... }
	</a>
}
