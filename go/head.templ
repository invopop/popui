package popui

import "path"

// Deprecated: Use EmbeddedCSS instead. This method will be removed in future versions.
templ DefaultCSS() {
	@FontInterLinks()
	<link href="https://cdn.jsdelivr.net/npm/@invopop/popui@0.0.64/dist/popui.css" rel="stylesheet"/>
}

// FontInterLinks provides the head data required to load the Inter font.
templ FontInterLinks() {
	<!-- Inter font -->
	<link rel="preconnect" href="https://fonts.googleapis.com"/>
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
	<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet"/>
}

// EmbeddedCSS provides the CSS to include in the `<head>` section of an HTML
// document that will load the styles from embeded files served by the web server.
templ EmbeddedCSS() {
	@FontInterLinks()
	<link href={ path.Join(AssetPath, Versioned("assets", "popui.css")) } rel="stylesheet"/>
}

// EmbeddedJS provides the JS to include in the `<head>` section of an HTML
// document that will load the Javascript code needed for dynamic components
// such as Hamburger menu to function
templ EmbeddedJS() {
	<script src={ path.Join(AssetPath, Versioned("assets", "popui.js")) }></script>
}

// DefaultPopupScripts provides the scripts to include in `<head>` section of an HTML
// document to enable the Invopop Console UI SDK and AlpineJS config.
templ DefaultPopupScripts() {
	<script>
        const CONSOLE_SDK_URL = 'https://cdn.jsdelivr.net/npm/@invopop/console-ui-sdk@0.0.7/index.js'

        window.onload = function() {
            const urlParams = new URLSearchParams(window.location.search)
            const accentColor = urlParams.get('accent')

            if (accentColor) {
                const root = document.querySelector(':root')
                root.style.setProperty('--workspace-accent-color', accentColor)
            }
        }
    </script>
	@AlpineJS()
}

// AlpineJS loads the default AlpineJS library from a CDN.
templ AlpineJS() {
	<script src="https://cdn.jsdelivr.net/npm/alpinejs/dist/cdn.min.js" defer></script>
}
