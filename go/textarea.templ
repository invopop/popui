package popui

import (
	"github.com/invopop/popui/go/classes"
	"github.com/invopop/popui/go/props"
)

templ Textarea(p props.Textarea) {
	<div class={ classes.TextareaWrapper }>
		if p.Label != "" {
			@InputLabel(props.Label{ID: p.ID, Class: p.LabelClass}) {
				{ p.Label }
			}
		}
		<textarea
			id={ p.ID }
			class={ templ.KV(classes.TextareaBase, p.Class == ""), templ.KV(p.Class, p.Class != ""), templ.KV(classes.TextareaMonospaced, p.Monospaced) }
			rows={ p.GetRows() }
			if p.Disabled {
				disabled
			}
			if p.Autofocus {
				autofocus
			}
			if p.Readonly {
				readonly
			}
			if p.Required {
				required
			}
			if p.Name != "" {
				name={ p.Name }
			}
			if p.Placeholder != "" {
				placeholder={ p.Placeholder }
			}
			{ p.Attrs... }
		>
			if p.Value != "" {
				{ p.Value }
			}
		</textarea>
		if !p.Error.Empty() {
			@InputError(p.Error)
		}
	</div>
}

// TODO: Use the same component and find a way to render a div or a textarea dynamicly
templ Contenteditable(p props.Textarea) {
	<div class={ classes.TextareaWrapper }>
		if p.Label != "" {
			@InputLabel(props.Label{ID: p.ID, Class: p.LabelClass}) {
				{ p.Label }
			}
		}
		<div
			tabindex="0"
			role="textarea"
			contenteditable="true"
			id={ p.ID }
			class={ templ.KV(classes.TextareaBase, p.Class == ""), "min-h-[80px]", templ.KV(p.Class, p.Class != "") }
			{ p.Attrs... }
		></div>
		if !p.Error.Empty() {
			@InputError(p.Error)
		}
	</div>
}
